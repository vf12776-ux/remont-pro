document.addEventListener('DOMContentLoaded', () => {
  // –≠–ª–µ–º–µ–Ω—Ç—ã
  const steps = document.querySelectorAll('.step');
  const nextButtons = document.querySelectorAll('.next-step');
  const backButtons = document.querySelectorAll('.back-step');
  const submitButton = document.querySelector('.submit');
  const newOrderButton = document.querySelector('.new-order');
  const progressBar = document.getElementById('progress-bar');
  let currentStep = 1;

  // –ü–æ–∫–∞–∑–∞—Ç—å –ø–µ—Ä–≤—ã–π —à–∞–≥
  document.getElementById(`step-${currentStep}`).classList.add('active');
  progressBar.style.width = `${(currentStep / 5) * 100}%`;

  // ===== –°–ò–°–¢–ï–ú–ê –ú–ê–°–¢–ï–†–û–í =====
  function loadPricesForCalculation() {
    const currentMaster = localStorage.getItem('currentMaster');
    if (currentMaster) {
      try {
        const master = JSON.parse(currentMaster);
        const prices = localStorage.getItem(`repairPrices_${master.pin}`);
        const multipliers = localStorage.getItem(`urgencyMultipliers_${master.pin}`);
        
        if (prices && multipliers) {
          return {
            prices: JSON.parse(prices),
            multipliers: JSON.parse(multipliers),
            masterName: master.name
          };
        }
      } catch (e) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ü–µ–Ω –º–∞—Å—Ç–µ—Ä–∞:', e);
      }
    }
    
    // –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ —Ü–µ–Ω—ã
    return {
      prices: {
        base: 1500,
        painting: 300,
        floor: 800,
        plumbing: 15000,
        primer: 50,
        protection: 30,
        cleaning: 5000,
        garbage: 3000
      },
      multipliers: { priority: 1.2, urgent: 1.5 },
      masterName: null
    };
  }

  function updateMasterInfo() {
    const masterInfo = document.getElementById('master-info');
    if (!masterInfo) return;
    
    const { masterName } = loadPricesForCalculation();
    if (masterName) {
      masterInfo.innerHTML = `üë®‚Äçüîß –†–∞—Å—á–µ—Ç –ø–æ —Ü–µ–Ω–∞–º –º–∞—Å—Ç–µ—Ä–∞: <strong>${masterName}</strong>`;
      masterInfo.style.display = 'block';
    } else {
      masterInfo.innerHTML = 'üí° –†–∞—Å—á–µ—Ç –ø–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–º —Ü–µ–Ω–∞–º';
      masterInfo.style.display = 'block';
    }
  }

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –º–∞—Å—Ç–µ—Ä–µ
  updateMasterInfo();

  // ===== –û–°–ù–û–í–ù–ê–Ø –õ–û–ì–ò–ö–ê –§–û–†–ú–´ =====
  // –õ–æ–≥–∏–∫–∞ –∫–Ω–æ–ø–æ–∫ "–î–∞–ª–µ–µ"
  nextButtons.forEach(button => {
    button.addEventListener('click', () => {
      if (validateStep(currentStep)) {
        steps[currentStep - 1].classList.remove('active');
        currentStep++;
        steps[currentStep - 1].classList.add('active');
        if (currentStep === 2) updateCost();
        if (currentStep === 4) updateSummary();
        progressBar.style.width = `${(currentStep / 5) * 100}%`;
      }
    });
  });

  // –õ–æ–≥–∏–∫–∞ –∫–Ω–æ–ø–æ–∫ "–ù–∞–∑–∞–¥"
  backButtons.forEach(button => {
    button.addEventListener('click', () => {
      steps[currentStep - 1].classList.remove('active');
      currentStep--;
      steps[currentStep - 1].classList.add('active');
      progressBar.style.width = `${(currentStep / 5) * 100}%`;
    });
  });

  // –õ–æ–≥–∏–∫–∞ –∫–Ω–æ–ø–∫–∏ "–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑"
  submitButton.addEventListener('click', () => {
    if (validateStep(currentStep)) {
      const { masterName } = loadPricesForCalculation();
      
      fetch('https://jsonplaceholder.typicode.com/posts', {
        method: 'POST',
        body: JSON.stringify({
          premise: document.querySelector('input[name="premise-type"]:checked')?.value,
          area: document.querySelector('#area').value,
          services: Array.from(document.querySelectorAll('input[name="services"]:checked')).map(s => s.value),
          additional: Array.from(document.querySelectorAll('input[name="additional"]:checked')).map(s => s.value),
          paintingType: document.querySelector('input[name="painting-type"]:checked')?.value,
          urgency: document.querySelector('input[name="urgency"]:checked')?.value,
          date: document.querySelector('#date').value,
          time: document.querySelector('#time').value,
          name: document.querySelector('#name').value,
          phone: document.querySelector('#phone').value,
          master: masterName || '–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ —Ü–µ–Ω—ã',
          totalCost: document.getElementById('final-cost').textContent
        }),
        headers: { 'Content-Type': 'application/json' }
      })
        .then(() => {
          steps[currentStep - 1].classList.remove('active');
          currentStep++;
          steps[currentStep - 1].classList.add('active');
          document.getElementById('order-number').textContent = Math.floor(Math.random() * 10000);
          localStorage.setItem('lastOrder', JSON.stringify({
            premise: document.querySelector('input[name="premise-type"]:checked')?.value,
            area: document.querySelector('#area').value,
            cost: document.getElementById('final-cost').textContent,
            master: masterName || '–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ —Ü–µ–Ω—ã'
          }));
        })
        .catch(() => alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ!'));
    }
  });

  // –õ–æ–≥–∏–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ù–æ–≤—ã–π –∑–∞–∫–∞–∑"
  newOrderButton.addEventListener('click', () => {
    steps[currentStep - 1].classList.remove('active');
    currentStep = 1;
    steps[currentStep - 1].classList.add('active');
    document.querySelector('form').reset();
    document.getElementById('painting-details').style.display = 'none';
    updateCost();
    updateSummary();
    progressBar.style.width = `${(currentStep / 5) * 100}%`;
  });

  // –¢—ë–º–Ω–∞—è —Ç–µ–º–∞
  document.getElementById('dark-mode-toggle').addEventListener('change', (e) => {
    document.body.classList.toggle('dark-mode', e.target.checked);
  });

  // –í–∞–ª–∏–¥–∞—Ü–∏—è —à–∞–≥–∞
  function validateStep(step) {
    if (step === 1) {
      const premise = document.querySelector('input[name="premise-type"]:checked');
      const area = document.querySelector('#area').value;
      if (!premise || !area || area <= 0) {
        alert('–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –ø–æ–º–µ—â–µ–Ω–∏—è –∏ —É–∫–∞–∂–∏—Ç–µ –ø–ª–æ—â–∞–¥—å!');
        return false;
      }
    } else if (step === 2) {
      const services = document.querySelectorAll('input[name="services"]:checked');
      if (services.length === 0) {
        alert('–í—ã–±–µ—Ä–∏—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–Ω—É —É—Å–ª—É–≥—É!');
        return false;
      }
    } else if (step === 3) {
      const date = document.querySelector('#date').value;
      const time = document.querySelector('#time').value;
      if (!date || !time) {
        alert('–£–∫–∞–∂–∏—Ç–µ –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è!');
        return false;
      }
    } else if (step === 4) {
      const name = document.querySelector('#name').value;
      const phone = document.querySelector('#phone').value;
      if (!name || !phone) {
        alert('–£–∫–∞–∂–∏—Ç–µ –∏–º—è –∏ —Ç–µ–ª–µ—Ñ–æ–Ω!');
        return false;
      }
    }
    return true;
  }

  // –ü–†–ê–í–ò–õ–¨–ù–´–ô –ø–æ–¥—Å—á—ë—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ —Å –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–µ–π (–û–ë–ù–û–í–õ–ï–ù–ù–´–ô)
  function updateCost() {
    const area = parseFloat(document.querySelector('#area').value) || 0;
    const services = document.querySelectorAll('input[name="services"]:checked');
    const urgency = document.querySelector('input[name="urgency"]:checked')?.value || 'normal';
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ü–µ–Ω—ã —Å —É—á–µ—Ç–æ–º –º–∞—Å—Ç–µ—Ä–∞
    const { prices: PRICES, multipliers: MULTIPLIERS } = loadPricesForCalculation();
    
    // –ë–∞–∑–æ–≤–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å
    let basePrice = area * PRICES.base;
    
    // –°—Ç–æ–∏–º–æ—Å—Ç—å –æ—Å–Ω–æ–≤–Ω—ã—Ö —É—Å–ª—É–≥
    let servicesPrice = 0;
    services.forEach(service => {
      switch(service.value) {
        case '–ü–æ–∫—Ä–∞—Å–∫–∞ —Å—Ç–µ–Ω':
          const paintingType = document.querySelector('input[name="painting-type"]:checked');
          const paintingMultiplier = paintingType ? parseFloat(paintingType.dataset.multiplier) : 1;
          servicesPrice += area * PRICES.painting * paintingMultiplier;
          break;
        case '–£–∫–ª–∞–¥–∫–∞ –ø–æ–ª–∞':
          servicesPrice += area * PRICES.floor;
          break;
        case '–°–∞–Ω—Ç–µ—Ö–Ω–∏–∫–∞':
          servicesPrice += PRICES.plumbing;
          break;
      }
    });
    
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏ (–û–ë–ù–û–í–õ–ï–ù–û - –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ü–µ–Ω—ã –º–∞—Å—Ç–µ—Ä–∞)
    let additionalPrice = 0;
    document.querySelectorAll('input[name="additional"]:checked').forEach(additional => {
      const serviceType = additional.value;
      
      switch(serviceType) {
        case 'primer':
          additionalPrice += area * PRICES.primer;
          break;
        case 'protection':
          additionalPrice += area * PRICES.protection;
          break;
        case 'cleaning':
          additionalPrice += PRICES.cleaning;
          break;
        case 'garbage':
          additionalPrice += PRICES.garbage;
          break;
      }
    });
    
    // –£–º–Ω–æ–∂–∏—Ç–µ–ª—å —Å—Ä–æ—á–Ω–æ—Å—Ç–∏
    let multiplier = 1;
    if (urgency === 'priority') multiplier = MULTIPLIERS.priority;
    if (urgency === 'urgent') multiplier = MULTIPLIERS.urgent;
    
    const total = Math.round((basePrice + servicesPrice + additionalPrice) * multiplier);
    
    document.getElementById('cost').textContent = `${total.toLocaleString()} ‚ÇΩ`;
    document.getElementById('final-cost').textContent = `${total.toLocaleString()} ‚ÇΩ`;
  }

  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–≤–æ–¥–∫–∏
  function updateSummary() {
    const premise = document.querySelector('input[name="premise-type"]:checked')?.value || '–ù–µ –≤—ã–±—Ä–∞–Ω–æ';
    const area = document.querySelector('#area').value || 0;
    const services = Array.from(document.querySelectorAll('input[name="services"]:checked')).map(s => s.value);
    const additional = Array.from(document.querySelectorAll('input[name="additional"]:checked')).map(s => s.value);
    const paintingType = document.querySelector('input[name="painting-type"]:checked')?.value;
    const urgency = document.querySelector('input[name="urgency"]:checked')?.value || 'normal';
    const date = document.querySelector('#date').value;
    const time = document.querySelector('#time').value;
    const { masterName } = loadPricesForCalculation();
    
    let paintingDetail = '';
    if (services.includes('–ü–æ–∫—Ä–∞—Å–∫–∞ —Å—Ç–µ–Ω') && paintingType) {
      paintingDetail = paintingType === 'one-layer' ? ' (–≤ –æ–¥–∏–Ω —Å–ª–æ–π)' : 
                      paintingType === 'two-layers' ? ' (–≤ –¥–≤–∞ —Å–ª–æ—è)' : 
                      ' (–ø–æ–∫—Ä–∞—Å–∫–∞ –æ–±–æ–µ–≤)';
    }
    
    let masterInfo = '';
    if (masterName) {
      masterInfo = `<p><strong>–ú–∞—Å—Ç–µ—Ä:</strong> ${masterName}</p>`;
    }
    
    document.getElementById('summary-content').innerHTML = `
      ${masterInfo}
      <p>–¢–∏–ø –ø–æ–º–µ—â–µ–Ω–∏—è: ${premise}</p>
      <p>–ü–ª–æ—â–∞–¥—å: ${area} –º¬≤</p>
      <p>–£—Å–ª—É–≥–∏: ${services.map((s, i) => s + (i === services.indexOf('–ü–æ–∫—Ä–∞—Å–∫–∞ —Å—Ç–µ–Ω') ? paintingDetail : '')).join(', ') || '–ù–µ –≤—ã–±—Ä–∞–Ω–æ'}</p>
      <p>–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ: ${additional.join(', ') || '–ù–µ—Ç'}</p>
      <p>–°—Ä–æ—á–Ω–æ—Å—Ç—å: ${urgency === 'normal' ? '–û–±—ã—á–Ω–∞—è' : urgency === 'priority' ? '–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è' : '–°—Ä–æ—á–Ω–∞—è'}</p>
      <p>–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è: ${date} ${time}</p>
    `;
  }

  // –ü–æ–∫–∞–∑/—Å–∫—Ä—ã—Ç–∏–µ –¥–µ—Ç–∞–ª–µ–π –ø–æ–∫—Ä–∞—Å–∫–∏
  document.querySelectorAll('input[name="services"]').forEach(service => {
    service.addEventListener('change', function() {
      const paintingDetails = document.getElementById('painting-details');
      if (this.value === '–ü–æ–∫—Ä–∞—Å–∫–∞ —Å—Ç–µ–Ω' && this.checked) {
        paintingDetails.style.display = 'block';
      } else if (this.value === '–ü–æ–∫—Ä–∞—Å–∫–∞ —Å—Ç–µ–Ω' && !this.checked) {
        paintingDetails.style.display = 'none';
      }
      updateCost();
    });
  });

  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –õ–Æ–ë–´–• –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
  document.querySelectorAll('#area, input[name="services"], input[name="urgency"], input[name="painting-type"], input[name="additional"]').forEach(input => {
    input.addEventListener('change', updateCost);
    input.addEventListener('input', updateCost);
  });
});
